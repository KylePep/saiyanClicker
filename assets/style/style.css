/* BASIC STYLES HERE */

/* font-family: 'Alkalami', serif;
font-family: 'Luckiest Guy', cursive;
font-family: 'Press Start 2P', cursive;
font-family: 'Silkscreen', cursive;
font-family: 'Wendy One', sans-serif; */

:root {
  --bossKiColor: rgb(9, 149, 93);
  --char1KiColor: rgb(255, 77, 0);
  --char2KiColor: green;
  --powerTotalColor: #e91a1a;
  --mouseX: 0;
  --mouseY: 0;
}

.main {
  position: relative;
  /* color: #461561; */
}

.Start-Button {
  image-rendering: pixelated;
  transform-origin: 50% 100%;
  scale: 2;
  transition: 1s;

}

.Start-Button:hover {
  scale: 2.1;
}

.header-tray {
  background-image: linear-gradient(rgb(249, 52, 12), rgb(157, 37, 13));
  border: 4mm double rgb(98, 23, 8);
}

.powerTotal {
  color: var(--powerTotalColor);
}

.lrg-font {
  font-family: 'Press Start 2P', cursive;
}

.sml-font {
  font-family: 'Silkscreen', cursive;
}

.shadow-md-font {
  text-shadow: -2px 2px 0 #000,
    2px 2px 0 #000,
    2px -2px 0 #000,
    -2px -2px 0 #000,
    2px 0px 0 #000,
    -2px 0px 0 #000;
}

.shadow-sm-font {
  text-shadow: -1px 1px 0 #000,
    1px 1px 0 #000,
    1px -1px 0 #000,
    -1px -1px 0 #000,
    1px 0px 0 #000,
    -1px 0px 0 #000;
}

.start-font {
  color: #ff400f;
  text-shadow: -4px 4px 0 #000,
    4px 4px 0 #000,
    4px -4px 0 #000,
    -4px -4px 0 #000,
    4px 0px 0 #000,
    -4px 0px 0 #000;
}

.map {
  height: 55vh;
  width: auto;
  border: .5em solid white;
}

.clouds {
  position: absolute;
  right: 0px;
  top: 0px;
  z-index: -10;

}

.clouds>img {
  object-fit: cover;
  height: 80vh;
  width: 100vw;
}

.char-select {
  /* background: linear-gradient(#fff870, #ffd800, #ffc000); */
  scale: .9;
  background: linear-gradient(#ff901f, #ff5810, #ff400f);
  box-shadow: 4px 4px #00000057;
  padding: 10px;
  border: 4mm ridge black;
}

.char-select>img {
  filter: drop-shadow(4px 4px #761f09);
  transition: .5s;
}

.char-select:hover>img {
  scale: 1.05;
}

.char-LineUp {
  transform: scaleX(1);
  filter: drop-shadow(-1px -1px 0px #ffffff);
  scale: 2;
  padding: 0px 1em;
}

.boss-LineUp {
  transform: scaleX(-1);
  filter: drop-shadow(-1px -1px 0px #ffffff);
  scale: 2;
}

.Raditz {
  filter: drop-shadow(0px -2px 3px rgb(255, 64, 0));
  position: absolute;
  left: 55%;
  bottom: 40%;
}

.Nappa {
  filter: drop-shadow(0px -2px 3px rgb(255, 64, 0));
  position: absolute;
  left: 39%;
  bottom: 16%;
}

.Vegeta {
  filter: drop-shadow(0px -2px 3px rgb(255, 64, 0));
  position: absolute;
  left: 48%;
  bottom: 31%;
}

.Bardock {
  filter: drop-shadow(0px -2px 3px rgb(255, 64, 0));
  position: absolute;
  left: 51%;
  bottom: 50%;
}


.shop-Item {
  height: 30vh;
  width: 30vh;
  transition: .25s;
  background-color: #1aa74b;
  border: 4mm ridge rgb(193, 193, 193);
}

.shop-Item:hover {
  scale: 1.01;
  cursor: pointer;
}


.shop-Modal {
  background-color: #1aa74b;
  border: 4mm ridge rgb(193, 193, 193);
}

.shop-Modal-button {
  border: none;
  color: white;
  background-color: #00000000;
  transition: .25s;
}

.shop-Modal-button:hover {
  scale: 1.05;
}

.shop-Modal-Body {
  border-top: 4mm ridge rgb(193, 193, 193);
  background-color: #136a31;
}

.shop-Modal-Header {
  border-bottom: 4mm ridge rgb(193, 193, 193);
  background-color: #20cd5d;
}

.shop-Modal-Item {
  display: flex;
  justify-content: center;
}

.shop-Modal-Item>img {
  display: flex;
  justify-content: center;
  height: 20vh;
  width: 20vh;
}


.shop-Reserve {
  height: 40vh;
}

.foreground {
  image-rendering: pixelated;
  padding: 0;
  margin: 0;
  position: absolute;
  transform-origin: 50% bottom;
  object-fit: cover;
  width: 100vw;
  height: auto;
  bottom: 0vh;
  left: 0vh;
  z-index: -10;
}

.gameMenu {
  position: absolute;
  bottom: 10vh;
  left: 2vw;
  z-index: 100;
}

.pauseButton {
  border: none;
  background-color: #00000000;
}

.pauseButton:hover {
  scale: 1.1;
}

.quitButton {
  cursor: pointer;
}

.quitButton:hover {
  scale: 1.1;
}

.pause-menu {
  background-color: #000000a1;
  height: 50vh;
}

.footer-reserve {
  height: 16px;
}

.character1 {
  image-rendering: pixelated;
  scale: 2;
  transform-origin: center bottom;
  transform: scaleX(-1);
  transition: 200ms;
}

.char1-bar {
  background-color: var(--char1KiColor);
}

.character2 {
  image-rendering: pixelated;
  scale: 2;
  transform-origin: center bottom;
  transform: scaleX(-1);
  transition: 200ms;
}

.char2-bar {
  background-color: var(--char2KiColor);
}

.character1:hover {
  filter: drop-shadow(2px -1px var(--char1KiColor));
}

.character2:hover {
  filter: drop-shadow(2px -1px var(--char2KiColor));
}

.boss {
  image-rendering: pixelated;
  scale: 2.2;
  transform-origin: 50% bottom;
  transition: 200ms;
}

.boss:hover {
  filter: drop-shadow(2px -1px var(--bossKiColor));
}

.boss-bar {
  rotate: (0.5turn);
  background-color: var(--bossKiColor);
}

.bossElemBorder {
  border: 2mm ridge rgb(255, 255, 255);
  height: 7vh;
}

.heal {
  margin-bottom: 15vh;
}

.heal:hover {
  cursor: pointer;
  scale: 1.1;
}

.masked {
  -webkit-mask-image: url(MDN.svg), url(star.svg);
  mask-image: url(MDN.svg), url(star.svg);
  -webkit-mask-size: 100% 100%;
  mask-size: 100% 100%;
  -webkit-mask-composite: source-over;
  mask-composite: add;
}

.damage-effect>* {
  position: absolute;
  scale: .5;
  opacity: 0;
  z-index: 100;
  animation: fade 0.5s;

}

.effect-backdrop {
  filter: drop-shadow(4px 4px var(--char1KiColor)) drop-shadow(-4px -4px var(--char2KiColor));
}

.fade {
  animation: fade 0.5s 0.5s;
}

@keyframes fade {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

.color {
  color: #4d236e;
}

.shake {
  /* Start the shake animation and make the animation last for 0.5 seconds */
  animation: shake 0.5s;

  /* When the animation is finished, start again */
  animation-iteration-count: infinite;
}

@keyframes shake {
  0% {
    transform: translate(1px, 1px);
  }

  10% {
    transform: translate(-1px, -2px);
  }

  20% {
    transform: translate(-3px, 0px);
  }

  30% {
    transform: translate(3px, 2px);
  }

  40% {
    transform: translate(1px, -1px);
  }

  50% {
    transform: translate(-1px, 2px);
  }

  60% {
    transform: translate(-3px, 1px);
  }

  70% {
    transform: translate(3px, 1px);
  }

  80% {
    transform: translate(-1px, -1px);
  }

  90% {
    transform: translate(1px, 2px);
  }

  100% {
    transform: translate(1px, -2px);
  }
}